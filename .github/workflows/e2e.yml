name: 'pr'

on:
  push:
    branches:
      - '**'
      - '!main'
  workflow_dispatch:


jobs:
  lint-fe:
    name: Lint Frontend
    runs-on: "ubuntu-latest"
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Download deps
        uses: bahmutov/npm-install@v1
        with:
          working-directory: gata-frontend

      - name: Run typescript checks
        working-directory: gata-frontend
        run: |
          npm run typecheck

      - name: Run linting checks
        working-directory: gata-frontend
        run: |
          npm run lint:ci
  knip-fe:
    name: Knip Frontend
    runs-on: "ubuntu-latest"
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Download deps
        uses: bahmutov/npm-install@v1
        with:
          working-directory: gata-frontend

      - name: Run frontend tests
        working-directory: gata-frontend
        run: |
          npm run knip          

  playwright:
    runs-on: ubuntu-latest
    steps:
      - name: Cloning repo
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Create .dev.vars file for frontend
        working-directory: ./gata-frontend
        env:
          AUTH0_DOMAIN: "gataersamla.eu.auth0.com"
          AUTH0_CLIENT_ID: ${{secrets.AUTH0_CLIENT_ID}}
          AUTH0_CLIENT_SECRET: ${{secrets.AUTH0_CLIENT_SECRET}}
          AUTH0_AUDIENCE: "https://gataersamla.no"
          AUTH0_COOKIE_SECRET: "s3cret"
          BACKEND_BASE_URL: "http://localhost:8080"
        run: |
          touch .dev.vars
          echo "AUTH0_DOMAIN=$AUTH0_DOMAIN" >> .dev.vars
          echo "AUTH0_CLIENT_ID=AUTH0_CLIENT_ID" >> .dev.vars
          echo "AUTH0_AUDIENCE=AUTH0_AUDIENCE" >> .dev.vars
          echo "AUTH0_CLIENT_SECRET=AUTH0_CLIENT_SECRET" >> .dev.vars
          echo "AUTH0_COOKIE_SECRET=AUTH0_COOKIE_SECRET" >> .dev.vars
          echo "AUTH0_RETURN_TO_URL=AUTH0_RETURN_TO_URL" >> .dev.vars
          echo "BACKEND_BASE_URL=BACKEND_BASE_URL" >> .dev.vars
      - name: Install frontend dependencies
        working-directory: ./gata-frontend
        run: |
          npm ci
      - name: Build frontend
        working-directory: ./gata-frontend
        run: |
          npm run build

      - name: Install npm dependencies and check typescript
        working-directory: ./gata-tests
        run: |
          npm ci
          npm run typescript

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true

      - name: Install playwright
        working-directory: ./gata-tests
        run: |
          npx playwright install --with-deps chromium

      - name: Run E2E tests
        working-directory: ./gata-tests
        env:
          # Backend environments
          AUTH0_DOMAIN: "gataersamla.eu.auth0.com"
          AUTH0_AUDIENCE: "https://gataersamla.no"
          SENDGRID_API_KEY: NA
          CLOUDINARY_URL: NA
          # Playwright environments
          PLAYWRIGHT_ADMIN_USERNAME: ${{secrets.E2E_PLAYWRIGHT_ADMIN_USERNAME}}
          PLAYWRIGHT_ADMIN_PASSWORD: ${{secrets.E2E_PLAYWRIGHT_ADMIN_PASSWORD}}
          PLAYWRIGHT_MEMBER_USERNAME: ${{secrets.E2E_PLAYWRIGHT_MEMBER_USERNAME}}
          PLAYWRIGHT_MEMBER_PASSWORD: ${{secrets.E2E_PLAYWRIGHT_MEMBER_PASSWORD}}
          PLAYWRIGHT_NONMEMBER_USERNAME: ${{secrets.E2E_PLAYWRIGHT_NONMEMBER_USERNAME}}
          PLAYWRIGHT_NONMEMBER_PASSWORD: ${{secrets.E2E_PLAYWRIGHT_NONMEMBER_PASSWORD}}
          PLAYWRIGHT_BASE_URL: http://localhost:3000


          # DEBUG: pw:webserver
          # DEBUG: pw:api
        run: |
          npx playwright test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: gata-tests/playwright-report

      - name: Write docker compose logs to file
        if: always()
        run: docker-compose logs > E2E-LOGS.txt

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: E2E-LOGS.txt
          path: E2E-LOGS.txt
