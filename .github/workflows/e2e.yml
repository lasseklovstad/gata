name: 'e2e'

on:
  push:
    branches:
      - '**'
      - '!main'
  workflow_dispatch:


jobs:
  playwright:
    runs-on: ubuntu-latest
    steps:
      - name: Cloning repo
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build image
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          tags: lassekl/gata:test
          build-args: |
            VITE_AUTH0_CLIENT_ID=${{secrets.E2E_VITE_AUTH0_CLIENT_ID}}
            VITE_AUTH0_DOMAIN=${{secrets.E2E_AUTH0_DOMAIN}}
            VITE_AUTH0_AUDIENCE=${{secrets.E2E_AUTH0_AUDIENCE}}

      - name: Install playwright
        working-directory: ./gata-tests
        run: |
         npm install
         npx playwright install --with-deps chromium

      - name: Run E2E tests
        working-directory: ./gata-tests
        env:
         AUTH0_DOMAIN: ${{secrets.E2E_AUTH0_DOMAIN}}
         AUTH0_AUDIENCE: ${{secrets.E2E_AUTH0_AUDIENCE}}
         VITE_AUTH0_CLIENT_ID: ${{secrets.E2E_VITE_AUTH0_CLIENT_ID}}
         API_AUTH0_CLIENT_ID: ${{secrets.E2E_API_AUTH0_CLIENT_ID}}
         API_AUTH0_CLIENT_SECRET: ${{secrets.E2E_API_AUTH0_CLIENT_SECRET}}
         PLAYWRIGHT_ADMIN_USERNAME: ${{secrets.E2E_PLAYWRIGHT_ADMIN_USERNAME}}
         PLAYWRIGHT_ADMIN_PASSWORD: ${{secrets.E2E_PLAYWRIGHT_ADMIN_PASSWORD}}
         PLAYWRIGHT_MEMBER_USERNAME: ${{secrets.E2E_PLAYWRIGHT_MEMBER_USERNAME}}
         PLAYWRIGHT_MEMBER_PASSWORD: ${{secrets.E2E_PLAYWRIGHT_MEMBER_PASSWORD}}
         PLAYWRIGHT_NONMEMBER_USERNAME: ${{secrets.E2E_PLAYWRIGHT_NONMEMBER_USERNAME}}
         PLAYWRIGHT_NONMEMBER_PASSWORD: ${{secrets.E2E_PLAYWRIGHT_NONMEMBER_PASSWORD}}
         PLAYWRIGHT_BASE_URL: http://localhost:8080
         # DEBUG: pw:webserver
         # DEBUG: pw:api
        run: |
          npx playwright test --project=chromium

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: gata-tests/playwright-report

      - name: Write docker compose logs to file
        if: always()
        run: docker-compose logs > E2E-LOGS.txt
